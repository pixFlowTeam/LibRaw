# LibRaw 构建类型配置
# 基于 RawSpeed 的先进构建类型系统

# 添加合理的构建类型默认值和警告
if(NOT CMAKE_BUILD_TYPE)
  message(WARNING "CMAKE_BUILD_TYPE is not defined!")

  set(default_build_type "ReleaseWithAsserts")

  message("WARNING: Defaulting to CMAKE_BUILD_TYPE=${default_build_type}. Use ccmake to set a proper value.")

  SET(CMAKE_BUILD_TYPE ${default_build_type} CACHE STRING "" FORCE)
endif(NOT CMAKE_BUILD_TYPE)

set(LIBRAW_STANDARD_BUILD_TYPES Debug ReleaseWithAsserts Release)
set(LIBRAW_SPECIAL_BUILD_TYPES Coverage Sanitize TSan Fuzz)
set(CMAKE_CONFIGURATION_TYPES ${LIBRAW_STANDARD_BUILD_TYPES} ${LIBRAW_SPECIAL_BUILD_TYPES} CACHE STRING "All the available build types" FORCE)

string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_UPPERCASE)
string(TOUPPER "${CMAKE_CONFIGURATION_TYPES}" CMAKE_CONFIGURATION_TYPES_UPPERCASE)
string(TOUPPER "${LIBRAW_SPECIAL_BUILD_TYPES}" LIBRAW_SPECIAL_BUILD_TYPES_UPPERCASE)

# 检查是否是已知的构建类型
list (FIND CMAKE_CONFIGURATION_TYPES_UPPERCASE ${CMAKE_BUILD_TYPE_UPPERCASE} BUILD_TYPE_IS_KNOWN)
if (${BUILD_TYPE_IS_KNOWN} EQUAL -1)
 message(SEND_ERROR "Unknown build type: ${CMAKE_BUILD_TYPE_UPPERCASE}. Please specify one of: ${CMAKE_CONFIGURATION_TYPES}")
endif()

# 检查是否是特殊构建
list (FIND LIBRAW_SPECIAL_BUILD_TYPES_UPPERCASE ${CMAKE_BUILD_TYPE_UPPERCASE} IS_SPECIAL_BUILD)
if (${IS_SPECIAL_BUILD} EQUAL -1)
 unset(LIBRAW_SPECIAL_BUILD)
else()
 set(LIBRAW_SPECIAL_BUILD 1)
endif()

foreach(CONFIGURATION_TYPE ${CMAKE_CONFIGURATION_TYPES})
  unset(LIBRAW_${CONFIGURATION_TYPE}_BUILD)
endforeach()
set(LIBRAW_${CMAKE_BUILD_TYPE_UPPERCASE}_BUILD 1)

